base::source("/tmp/r-plugin-tr608/Rsource-5359-build-database.R")
base::source("/tmp/r-plugin-tr608/Rsource-5359-build-database.R")
dim(flows)
dim(non_flows)
dim(flows$processes)
length(flows$processes)
head(flows$process)
length(flows$process)
length(processes)
processes
length(processes)
lenght(FLOWS)
dim(FLOWS)
dim(non_flows)
head(non_flows)
names(non_flows)
write.csv(non_flows$process, "process-227.csv")
write.csv(processes, "process-370.csv")
dim(non_flows)
head(non_flows)
names(non_flows)
head(flows)
flows <- read.csv("processes-analysis.csv", header=FALSE)
head(flows)
flows <- read.csv("processes-analysis.csv")
flows <- read.csv("processes-analysis.csv")
head(flows)
unique(flows$process.name)
flows <- read.csv("processes-analysis.csv")
processes <- unique(flows$process.name)
non_flows <- read.csv("main-tidy.csv")
non_flows$process <- paste(non_flows$process, "-", non_flows$capacity.max, sep="")
non_flows$process <- gsub(".yaml", "", non_flows$process)
PROCESS <- as.character(processes[1])
FLOWS <- filter(flows, process==PROCESS)
F <- nrow(FLOWS)
MAIN <- filter(FLOWS, abs(value)==1)
NONFLOWS <- filter(non_flows, process==PROCESS)
sink("test.yaml")
cat("process: ", PROCESS, "\n", sep="")
cat("flow:", "\n")
## Print flows
for(f in 1:F){
  cat("     ", as.character(FLOWS$resource[f]), ":", "\n", sep="")
  cat("          ", "value: ", as.character(FLOWS$value[f]), "\n", sep="")
  cat("          ", "unit: ", as.character(FLOWS$unit[f]), "\n", sep="")
  ## TODO: Add reference (which needs to be loaded from elsewhere)
}
  ## Print capacity
  cat("capacity: ", "\n")
  cat("     ", "value: ", as.character(NONFLOWS$capacity.max), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$scale.ref), "\n", sep="")
  ## Print TRL
  cat("trl: ", "\n")
  cat("     ", "level: ", as.character(NONFLOWS$trl), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$trl.reference), "\n", sep="")
  cat("     ", "justification: ", as.character(NONFLOWS$trl.notes), "\n", sep="")
  ## Print main resource
  cat("main: ", as.character(MAIN$resource), sep="")
sink()
yaml_builder <- function(process){
## TODO: TBC
}
flows <- read.csv("processes-analysis.csv")
processes <- unique(flows$process.name)
non_flows <- read.csv("main-tidy.csv")
non_flows$process <- paste(non_flows$process, "-", non_flows$capacity.max, sep="")
non_flows$process <- gsub(".yaml", "", non_flows$process)
PROCESS <- as.character(processes[1])
PROCESS
jFLOWS <- filter(flows, process==PROCESS)
FLOWS <- filter(flows, process==PROCESS)
FLOWS
FLOWS <- filter(flows, process.name==PROCESS)
FLOWS
F <- nrow(FLOWS)
MAIN <- filter(FLOWS, abs(value)==1)
NONFLOWS <- filter(non_flows, process==PROCESS)
sink("test.yaml")
cat("process: ", PROCESS, "\n", sep="")
cat("flow:", "\n")
## Print flows
for(f in 1:F){
  cat("     ", as.character(FLOWS$resource[f]), ":", "\n", sep="")
  cat("          ", "value: ", as.character(FLOWS$value[f]), "\n", sep="")
  cat("          ", "unit: ", as.character(FLOWS$unit[f]), "\n", sep="")
  ## TODO: Add reference (which needs to be loaded from elsewhere)
}
  ## Print capacity
  cat("capacity: ", "\n")
  cat("     ", "value: ", as.character(NONFLOWS$capacity.max), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$scale.ref), "\n", sep="")
  ## Print TRL
  cat("trl: ", "\n")
  cat("     ", "level: ", as.character(NONFLOWS$trl), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$trl.reference), "\n", sep="")
  cat("     ", "justification: ", as.character(NONFLOWS$trl.notes), "\n", sep="")
  ## Print main resource
  cat("main: ", as.character(MAIN$resource), sep="")
sink()
yaml_builder <- function(process){
## TODO: TBC
}
jq()
q()
foo <- read.csv("REWORKED-main-tidy.csv")
head(foo)
filter(foo, value==1)
dim(filter(foo, value==1))
bar <- filter(foo, value==1)
write.csv(bar, "REWORKED-main-tidy.csv")
q()
foo <- read.csv("processes-analysis.csv")
head(foo)
bar <- filter(foo, abs(value)==1)
head(bar)
write.csv(bar, "REWORKED-main-tidy.csv")
q()
flows <- read.csv("processes-analysis.csv")
processes <- unique(flows$process.name)
non_flows <- read.csv("REWORKED-main-tidy.csv")
head(non_flows)
names(non_flows)
processes <- unique(non_flows$process.name)
head(processes)
dim(processes)
length(processes)
PROCESS <- as.character(processes[1])
FLOWS <- filter(flows, process.name==PROCESS)
F <- nrow(FLOWS)
MAIN <- filter(FLOWS, abs(value)==1)
NONFLOWS <- filter(non_flows, process==PROCESS)
NONFLOWS <- filter(non_flows, process.name==PROCESS)
NONFLOWS
sink("test.yaml")
cat("process: ", PROCESS, "\n", sep="")
cat("flow:", "\n")
## Print flows
for(f in 1:F){
  cat("     ", as.character(FLOWS$resource[f]), ":", "\n", sep="")
  cat("          ", "value: ", as.character(FLOWS$value[f]), "\n", sep="")
  cat("          ", "unit: ", as.character(FLOWS$unit[f]), "\n", sep="")
  ## TODO: Add reference (which needs to be loaded from elsewhere)
}
  ## Print capacity
  cat("capacity: ", "\n")
  cat("     ", "value: ", as.character(NONFLOWS$capacity.max), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$scale.ref), "\n", sep="")
  ## Print TRL
  cat("trl: ", "\n")
  cat("     ", "level: ", as.character(NONFLOWS$trl), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$trl.reference), "\n", sep="")
  cat("     ", "justification: ", as.character(NONFLOWS$trl.notes), "\n", sep="")
  ## Print main resource
  cat("main: ", as.character(MAIN$resource), sep="")
sink()
yaml_builder <- function(process){
## TODO: TBC
}
names(non_flows)
base::source("/tmp/r-plugin-tr608/Rsource-15384-build-database.R")
lenght(processes)
length(processes)
jPROCESS <- as.character(processes[370])
PROCESS <- as.character(processes[370])
FLOWS <- filter(flows, process.name==PROCESS)
F <- nrow(FLOWS)
MAIN <- filter(FLOWS, abs(value)==1)
NONFLOWS <- filter(non_flows, process.name==PROCESS)
sink("test.yaml")
cat("process: ", PROCESS, "\n", sep="")
cat("flow:", "\n")
## Print flows
for(f in 1:F){
  cat("     ", as.character(FLOWS$resource[f]), ":", "\n", sep="")
  cat("          ", "value: ", as.character(FLOWS$value[f]), "\n", sep="")
  cat("          ", "unit: ", as.character(FLOWS$unit[f]), "\n", sep="")
  ## TODO: Add reference (which needs to be loaded from elsewhere)
}
  ## Print capacity
  cat("capacity: ", "\n")
  cat("     ", "value: ", as.character(NONFLOWS$capacity), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$scale.ref), "\n", sep="")
  ## Print TRL
  cat("trl: ", "\n")
  cat("     ", "level: ", as.character(NONFLOWS$trl), "\n", sep="")
  cat("     ", "ref: ", as.character(NONFLOWS$trl.reference), "\n", sep="")
  cat("     ", "justification: ", as.character(NONFLOWS$trl.notes), "\n", sep="")
  ## Print main resource
  cat("main: ", as.character(MAIN$resource), sep="")
sink()
yaml_builder <- function(process){
## TODO: TBC
}
q()
